{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport SafeAreaView from \"react-native-safe-area-context\";\nimport dbQuerySnapshot from \"./services/dbQuerySnapshot\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(ScrollView, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.centeredView\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n      setModalVisible(!modalVisible);\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView\n  }, React.createElement(View, {\n    style: styles.modalView\n  }, React.createElement(Text, {\n    style: styles.modalText\n  }, \"Hello World!\"), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle\n  }, \"Hide Modal\"))))), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonOpen],\n    onPress: function onPress() {\n      return setModalVisible(true);\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle\n  }, \"Show Modal\"))), React.createElement(View, {\n    style: styles.list\n  }, dbQuerySnapshot().map(function (produtos) {\n    return React.createElement(View, {\n      style: styles.card,\n      key: produtos.id,\n      onPress: function onPress() {}\n    }, React.createElement(View, {\n      style: styles.text\n    }, React.createElement(Text, null, produtos.name), React.createElement(Text, null, \"R$ \" + produtos.value + \",00\")));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  list: {\n    zIndex: 1,\n    flex: 1,\n    textAlign: \"center\"\n  },\n  card: {\n    flex: 1,\n    backgroundColor: \"#1212\",\n    textAlign: \"center\",\n    paddingVertical: 10,\n    marginVertical: 10\n  },\n  text: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginHorizontal: 25,\n    textAlign: \"center\"\n  },\n  centeredView: {\n    zIndex: 100,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["G:/0-Bibliotecas/Projetos Brendo/React/newChurras/App.js"],"names":["React","useState","ScrollView","SafeAreaView","dbQuerySnapshot","App","modalVisible","setModalVisible","styles","container","centeredView","Alert","alert","modalView","modalText","button","buttonClose","textStyle","buttonOpen","list","map","produtos","card","id","text","name","value","StyleSheet","create","flex","zIndex","textAlign","backgroundColor","paddingVertical","marginVertical","flexDirection","justifyContent","marginHorizontal","alignItems","marginTop","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAGA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAOC,eAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAwCJ,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOK,YAAP;AAAA,MAAqBC,eAArB;;AACA,SAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC;AAA1B,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACE,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,OAAO,EAAEJ,YAHX;AAIE,IAAA,cAAc,EAAE,0BAAM;AACpBK,MAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACAL,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD;AAPH,KASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACE;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACK;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,oBADF,EAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACN,MAAM,CAACO,MAAR,EAAgBP,MAAM,CAACQ,WAAvB,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMT,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA;AAFX,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACS;AAApB,kBAJF,CAFF,CADF,CATF,CADF,EAsBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACT,MAAM,CAACO,MAAR,EAAgBP,MAAM,CAACU,UAAvB,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMX,eAAe,CAAC,IAAD,CAArB;AAAA;AAFX,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACS;AAApB,kBAJF,CAtBF,CADF,EA8BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACW;AAApB,KACGf,eAAe,GAAGgB,GAAlB,CAAsB,UAACC,QAAD,EAAc;AACnC,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEb,MAAM,CAACc,IAApB;AAA0B,MAAA,GAAG,EAAED,QAAQ,CAACE,EAAxC;AAA4C,MAAA,OAAO,EAAE,mBAAM,CAAE;AAA7D,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEf,MAAM,CAACgB;AAApB,OACE,oBAAC,IAAD,QAAOH,QAAQ,CAACI,IAAhB,CADF,EAEE,oBAAC,IAAD,QAAO,QAAQJ,QAAQ,CAACK,KAAjB,GAAyB,KAAhC,CAFF,CADF,CADF;AAQD,GATA,CADH,CA9BF,CAFF;AAgDD;AAED,IAAMlB,MAAM,GAAGmB,UAAU,CAACC,MAAX,CAAkB;AAC/BnB,EAAAA,SAAS,EAAE;AACToB,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,MAAM,EAAE,CADJ;AAEJD,IAAAA,IAAI,EAAE,CAFF;AAGJE,IAAAA,SAAS,EAAE;AAHP,GAJyB;AAS/BT,EAAAA,IAAI,EAAE;AACJO,IAAAA,IAAI,EAAE,CADF;AAGJG,IAAAA,eAAe,EAAE,OAHb;AAIJD,IAAAA,SAAS,EAAE,QAJP;AAKJE,IAAAA,eAAe,EAAE,EALb;AAMJC,IAAAA,cAAc,EAAE;AANZ,GATyB;AAiB/BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,cAAc,EAAE,eAFZ;AAGJC,IAAAA,gBAAgB,EAAE,EAHd;AAKJN,IAAAA,SAAS,EAAE;AALP,GAjByB;AAwB/BrB,EAAAA,YAAY,EAAE;AACZoB,IAAAA,MAAM,EAAE,GADI;AAEZD,IAAAA,IAAI,EAAE,CAFM;AAGZO,IAAAA,cAAc,EAAE,QAHJ;AAIZE,IAAAA,UAAU,EAAE,QAJA;AAKZC,IAAAA,SAAS,EAAE;AALC,GAxBiB;AA+B/B1B,EAAAA,SAAS,EAAE;AACT2B,IAAAA,MAAM,EAAE,EADC;AAETR,IAAAA,eAAe,EAAE,OAFR;AAGTS,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTJ,IAAAA,UAAU,EAAE,QALH;AAMTK,IAAAA,WAAW,EAAE,MANJ;AAOTC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAPL;AAWTC,IAAAA,aAAa,EAAE,IAXN;AAYTC,IAAAA,YAAY,EAAE,CAZL;AAaTC,IAAAA,SAAS,EAAE;AAbF,GA/BoB;AA8C/BlC,EAAAA,MAAM,EAAE;AACN0B,IAAAA,YAAY,EAAE,EADR;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNO,IAAAA,SAAS,EAAE;AAHL,GA9CuB;AAmD/B/B,EAAAA,UAAU,EAAE;AACVc,IAAAA,eAAe,EAAE;AADP,GAnDmB;AAsD/BhB,EAAAA,WAAW,EAAE;AACXgB,IAAAA,eAAe,EAAE;AADN,GAtDkB;AAyD/Bf,EAAAA,SAAS,EAAE;AACTiC,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTpB,IAAAA,SAAS,EAAE;AAHF,GAzDoB;AA8D/BjB,EAAAA,SAAS,EAAE;AACTsC,IAAAA,YAAY,EAAE,EADL;AAETrB,IAAAA,SAAS,EAAE;AAFF;AA9DoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, StyleSheet, Text, Alert, Pressable, View } from \"react-native\";\r\n\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport SafeAreaView from \"react-native-safe-area-context\";\r\n\r\nimport dbQuerySnapshot from \"./services/dbQuerySnapshot\";\r\n\r\nexport default function App() {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  return (\r\n    /*<SafeAreaView>*/\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.centeredView}>\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            setModalVisible(!modalVisible);\r\n          }}\r\n        >\r\n          <View style={styles.centeredView}>\r\n            <View style={styles.modalView}>\r\n              <Text style={styles.modalText}>Hello World!</Text>\r\n              <Pressable\r\n                style={[styles.button, styles.buttonClose]}\r\n                onPress={() => setModalVisible(!modalVisible)}\r\n              >\r\n                <Text style={styles.textStyle}>Hide Modal</Text>\r\n              </Pressable>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n        <Pressable\r\n          style={[styles.button, styles.buttonOpen]}\r\n          onPress={() => setModalVisible(true)}\r\n        >\r\n          <Text style={styles.textStyle}>Show Modal</Text>\r\n        </Pressable>\r\n      </View>\r\n      <View style={styles.list}>\r\n        {dbQuerySnapshot().map((produtos) => {\r\n          return (\r\n            <View style={styles.card} key={produtos.id} onPress={() => {}}>\r\n              <View style={styles.text}>\r\n                <Text>{produtos.name}</Text>\r\n                <Text>{\"R$ \" + produtos.value + \",00\"}</Text>\r\n              </View>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n    </ScrollView>\r\n\r\n    /*</SafeAreaView>*/\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  list: {\r\n    zIndex: 1,\r\n    flex: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  card: {\r\n    flex: 1,\r\n\r\n    backgroundColor: \"#1212\",\r\n    textAlign: \"center\",\r\n    paddingVertical: 10,\r\n    marginVertical: 10,\r\n  },\r\n  text: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginHorizontal: 25,\r\n\r\n    textAlign: \"center\",\r\n  },\r\n  centeredView: {\r\n    zIndex: 100,\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}