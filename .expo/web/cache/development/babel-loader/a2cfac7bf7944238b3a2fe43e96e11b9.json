{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport SafeAreaView from \"react-native-safe-area-context\";\nexport default function ModalView() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n      setModalVisible(!modalVisible);\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView\n  }, React.createElement(View, {\n    style: styles.modalView\n  }, React.createElement(Text, {\n    style: styles.modalText\n  }, \"Hello World!\"), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle\n  }, \"Hide Modal\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  list: {\n    flex: 1,\n    textAlign: \"center\"\n  },\n  card: {\n    flex: 1,\n    backgroundColor: \"#1212\",\n    textAlign: \"center\",\n    paddingVertical: 10,\n    marginVertical: 10\n  },\n  text: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginHorizontal: 25,\n    textAlign: \"center\"\n  },\n  centeredView: {\n    zIndex: 100,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["G:/0-Bibliotecas/Projetos Brendo/React/newChurras/components/modalPrudcts.jsx"],"names":["React","useState","ScrollView","SafeAreaView","ModalView","modalVisible","setModalVisible","Alert","alert","styles","centeredView","modalView","modalText","button","buttonClose","textStyle","StyleSheet","create","container","flex","list","textAlign","card","backgroundColor","paddingVertical","marginVertical","text","flexDirection","justifyContent","marginHorizontal","zIndex","alignItems","marginTop","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","buttonOpen","color","fontWeight","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAGA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,eAAe,SAASC,SAAT,GAAqB;AAClC,kBAAwCH,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOI,YAAP;AAAA,MAAqBC,eAArB;;AACA,SACE,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,OAAO,EAAED,YAHX;AAIE,IAAA,cAAc,EAAE,0BAAM;AACpBE,MAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACAF,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD;AAPH,KASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,oBADF,EAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACH,MAAM,CAACI,MAAR,EAAgBJ,MAAM,CAACK,WAAvB,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMR,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA;AAFX,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACM;AAApB,kBAJF,CAFF,CADF,CATF,CADF;AAuBD;AACD,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BC,EAAAA,IAAI,EAAE;AACJD,IAAAA,IAAI,EAAE,CADF;AAEJE,IAAAA,SAAS,EAAE;AAFP,GAJyB;AAQ/BC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAE,CADF;AAGJI,IAAAA,eAAe,EAAE,OAHb;AAIJF,IAAAA,SAAS,EAAE,QAJP;AAKJG,IAAAA,eAAe,EAAE,EALb;AAMJC,IAAAA,cAAc,EAAE;AANZ,GARyB;AAgB/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,cAAc,EAAE,eAFZ;AAGJC,IAAAA,gBAAgB,EAAE,EAHd;AAKJR,IAAAA,SAAS,EAAE;AALP,GAhByB;AAuB/BX,EAAAA,YAAY,EAAE;AACZoB,IAAAA,MAAM,EAAE,GADI;AAEZX,IAAAA,IAAI,EAAE,CAFM;AAGZS,IAAAA,cAAc,EAAE,QAHJ;AAIZG,IAAAA,UAAU,EAAE,QAJA;AAKZC,IAAAA,SAAS,EAAE;AALC,GAvBiB;AA8B/BrB,EAAAA,SAAS,EAAE;AACTsB,IAAAA,MAAM,EAAE,EADC;AAETV,IAAAA,eAAe,EAAE,OAFR;AAGTW,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTJ,IAAAA,UAAU,EAAE,QALH;AAMTK,IAAAA,WAAW,EAAE,MANJ;AAOTC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAPL;AAWTC,IAAAA,aAAa,EAAE,IAXN;AAYTC,IAAAA,YAAY,EAAE,CAZL;AAaTC,IAAAA,SAAS,EAAE;AAbF,GA9BoB;AA6C/B7B,EAAAA,MAAM,EAAE;AACNqB,IAAAA,YAAY,EAAE,EADR;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNO,IAAAA,SAAS,EAAE;AAHL,GA7CuB;AAkD/BC,EAAAA,UAAU,EAAE;AACVpB,IAAAA,eAAe,EAAE;AADP,GAlDmB;AAqD/BT,EAAAA,WAAW,EAAE;AACXS,IAAAA,eAAe,EAAE;AADN,GArDkB;AAwD/BR,EAAAA,SAAS,EAAE;AACT6B,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTxB,IAAAA,SAAS,EAAE;AAHF,GAxDoB;AA6D/BT,EAAAA,SAAS,EAAE;AACTkC,IAAAA,YAAY,EAAE,EADL;AAETzB,IAAAA,SAAS,EAAE;AAFF;AA7DoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, StyleSheet, Text, Alert, Pressable, View } from \"react-native\";\r\n\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport SafeAreaView from \"react-native-safe-area-context\";\r\nexport default function ModalView() {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={modalVisible}\r\n      onRequestClose={() => {\r\n        Alert.alert(\"Modal has been closed.\");\r\n        setModalVisible(!modalVisible);\r\n      }}\r\n    >\r\n      <View style={styles.centeredView}>\r\n        <View style={styles.modalView}>\r\n          <Text style={styles.modalText}>Hello World!</Text>\r\n          <Pressable\r\n            style={[styles.button, styles.buttonClose]}\r\n            onPress={() => setModalVisible(!modalVisible)}\r\n          >\r\n            <Text style={styles.textStyle}>Hide Modal</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  list: {\r\n    flex: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  card: {\r\n    flex: 1,\r\n\r\n    backgroundColor: \"#1212\",\r\n    textAlign: \"center\",\r\n    paddingVertical: 10,\r\n    marginVertical: 10,\r\n  },\r\n  text: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginHorizontal: 25,\r\n\r\n    textAlign: \"center\",\r\n  },\r\n  centeredView: {\r\n    zIndex: 100,\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}